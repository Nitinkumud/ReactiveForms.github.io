{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/customers/customer.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/customers/customer.component.css","./src/app/customers/customer.component.ts","./src/app/customers/customer.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"container\\\">\\n  <app-customer></app-customer>\\n</div>\\n\\n\"","export default \"<div class=\\\"card\\\">\\n  <div class=\\\"card-header\\\">\\n    Sign Up!\\n  </div>\\n\\n  <div class=\\\"card-body\\\">\\n    <form novalidate\\n          (ngSubmit)=\\\"save()\\\"\\n          [formGroup]=\\\"customerForm\\\">\\n\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-2 col-form-label\\\"\\n               for=\\\"firstNameId\\\">First Name</label>\\n        <div class=\\\"col-md-8\\\">\\n          <input class=\\\"form-control\\\"\\n                 id=\\\"firstNameId\\\"\\n                 type=\\\"text\\\"\\n                 placeholder=\\\"First Name (required)\\\"\\n                 formControlName=\\\"firstName\\\"\\n                 [ngClass]=\\\"{'is-invalid': (customerForm.get('firstName').touched ||\\n                                            customerForm.get('firstName').dirty) &&\\n                                            !customerForm.get('firstName').valid }\\\" />\\n          <span class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"customerForm.get('firstName').errors?.required\\\">\\n              Please enter your first name.\\n            </span>\\n            <span *ngIf=\\\"customerForm.get('firstName').errors?.minlength\\\">\\n              The first name must be longer than 3 characters.\\n            </span>\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-2 col-form-label\\\"\\n               for=\\\"lastNameId\\\">Last Name</label>\\n        <div class=\\\"col-md-8\\\">\\n          <input class=\\\"form-control\\\"\\n                 id=\\\"lastNameId\\\"\\n                 type=\\\"text\\\"\\n                 placeholder=\\\"Last Name (required)\\\"\\n                 formControlName=\\\"lastName\\\"\\n                 [ngClass]=\\\"{'is-invalid': (customerForm.get('lastName').touched ||\\n                                            customerForm.get('lastName').dirty) &&\\n                                            !customerForm.get('lastName').valid }\\\" />\\n          <span class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"customerForm.get('lastName').errors?.required\\\">\\n              Please enter your last name.\\n            </span>\\n            <span *ngIf=\\\"customerForm.get('lastName').errors?.maxlength\\\">\\n              The last name must be less than 50 characters.\\n            </span>\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div formGroupName=\\\"emailGroup\\\">\\n        <div class=\\\"form-group row mb-2\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\"\\n                 for=\\\"emailId\\\">Email</label>\\n          <div class=\\\"col-md-8\\\">\\n            <input class=\\\"form-control\\\"\\n                   id=\\\"emailId\\\"\\n                   type=\\\"email\\\"\\n                   placeholder=\\\"Email (required)\\\"\\n                   formControlName=\\\"email\\\"\\n                   [ngClass]=\\\"{'is-invalid': emailMessage }\\\" />\\n            <span class=\\\"invalid-feedback\\\">\\n              {{ emailMessage }}\\n            </span>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group row mb-2\\\">\\n          <label class=\\\"col-md-2 col-form-label\\\"\\n                 for=\\\"confirmEmailId\\\">Confirm Email</label>\\n          <div class=\\\"col-md-8\\\">\\n            <input class=\\\"form-control\\\"\\n                   id=\\\"confirmEmailId\\\"\\n                   type=\\\"email\\\"\\n                   placeholder=\\\"Confirm Email (required)\\\"\\n                   formControlName=\\\"confirmEmail\\\"\\n                   [ngClass]=\\\"{'is-invalid': customerForm.get('emailGroup').errors ||\\n                                             ((customerForm.get('emailGroup.confirmEmail').touched || \\n                                              customerForm.get('emailGroup.confirmEmail').dirty) && \\n                                              !customerForm.get('emailGroup.confirmEmail').valid) }\\\" />\\n            <span class=\\\"invalid-feedback\\\">\\n              <span *ngIf=\\\"customerForm.get('emailGroup.confirmEmail').errors?.required\\\">\\n                Please confirm your email address.\\n              </span>\\n              <span *ngIf=\\\"customerForm.get('emailGroup').errors?.match\\\">\\n                The confirmation does not match the email address.\\n              </span>\\n            </span>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-2 col-form-label\\\"\\n               for=\\\"phoneId\\\">Phone</label>\\n        <div class=\\\"col-md-8\\\">\\n          <input class=\\\"form-control\\\"\\n                 id=\\\"phoneId\\\"\\n                 type=\\\"tel\\\"\\n                 placeholder=\\\"Phone\\\"\\n                 formControlName=\\\"phone\\\"\\n                 [ngClass]=\\\"{'is-invalid': !customerForm.get('phone').valid }\\\" />\\n          <span class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"customerForm.get('phone').errors?.required\\\">\\n              Please enter your phone number.\\n            </span>\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-2 col-form-label pt-0\\\">Send Notifications</label>\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input class=\\\"form-check-input\\\"\\n                     type=\\\"radio\\\"\\n                     value=\\\"email\\\"\\n                     formControlName=\\\"notification\\\">Email\\n            </label>\\n          </div>\\n          <div class=\\\"form-check form-check-inline\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input class=\\\"form-check-input\\\"\\n                     type=\\\"radio\\\"\\n                     value=\\\"text\\\"\\n                     formControlName=\\\"notification\\\">Text\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row mb-2\\\">\\n        <label class=\\\"col-md-2 col-form-label\\\"\\n               for=\\\"ratingId\\\">Rating</label>\\n        <div class=\\\"col-md-8\\\">\\n          <input class=\\\"form-control\\\"\\n                 id=\\\"ratingId\\\"\\n                 type=\\\"number\\\"\\n                 formControlName=\\\"rating\\\"\\n                 [ngClass]=\\\"{'is-invalid': (customerForm.get('rating').touched || \\n                                             customerForm.get('rating').dirty) && \\n                                             !customerForm.get('rating').valid }\\\" />\\n          <span class=\\\"invalid-feedback\\\">\\n            <span *ngIf=\\\"customerForm.get('rating').errors?.range\\\">\\n              Please rate your experience from 1 to 5.\\n            </span>\\n          </span>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row mb-2\\\">\\n        <div class=\\\"col-md-8\\\">\\n          <div class=\\\"form-check\\\">\\n            <label class=\\\"form-check-label\\\">\\n              <input class=\\\"form-check-input\\\"\\n                     id=\\\"sendCatalogId\\\"\\n                     type=\\\"checkbox\\\"\\n                     formControlName=\\\"sendCatalog\\\">Send me your catalog\\n            </label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"customerForm.get('sendCatalog').value\\\">\\n        <div formArrayName=\\\"addresses\\\">\\n\\n          <div [formGroupName]=\\\"i\\\"\\n               *ngFor=\\\"let address of addresses.controls; let i=index\\\">\\n            <div class=\\\"form-group row mb-2\\\">\\n              <label class=\\\"col-md-2 col-form-label pt-0\\\">Address Type</label>\\n              <div class=\\\"col-md-8\\\">\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <label class=\\\"form-check-label\\\">\\n                    <input class=\\\"form-check-input\\\"\\n                           id=\\\"addressType1Id\\\"\\n                           type=\\\"radio\\\"\\n                           value=\\\"home\\\"\\n                           formControlName=\\\"addressType\\\"> Home\\n                  </label>\\n                </div>\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <label class=\\\"form-check-label\\\">\\n                    <input class=\\\"form-check-input\\\"\\n                           id=\\\"addressType1Id\\\"\\n                           type=\\\"radio\\\"\\n                           value=\\\"work\\\"\\n                           formControlName=\\\"addressType\\\"> Work\\n                  </label>\\n                </div>\\n                <div class=\\\"form-check form-check-inline\\\">\\n                  <label class=\\\"form-check-label\\\">\\n                    <input class=\\\"form-check-input\\\"\\n                           id=\\\"addressType1Id\\\"\\n                           type=\\\"radio\\\"\\n                           value=\\\"other\\\"\\n                           formControlName=\\\"addressType\\\"> Other\\n                  </label>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row mb-2\\\">\\n              <label class=\\\"col-md-2 col-form-label\\\"\\n                     attr.for=\\\"{{'street1Id' + i}}\\\">Street Address 1</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input class=\\\"form-control\\\"\\n                       id=\\\"{{ 'street1Id' + i }}\\\"\\n                       type=\\\"text\\\"\\n                       placeholder=\\\"Street address (required)\\\"\\n                       formControlName=\\\"street1\\\"\\n                       [ngClass]=\\\"{'is-invalid': (address.controls.street1.touched || \\n                                                  address.controls.street1.dirty) && \\n                                                  !address.controls.street1.valid }\\\">\\n                <span class=\\\"invalid-feedback\\\">\\n                  <span *ngIf=\\\"address.controls.street1.errors?.required\\\">\\n                    Please enter your street address.\\n                  </span>\\n                </span>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row mb-2\\\">\\n              <label class=\\\"col-md-2 col-form-label\\\"\\n                     attr.for=\\\"{{'street2Id' + i}}\\\">Street Address 2</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input class=\\\"form-control\\\"\\n                       id=\\\"{{'street2Id' + i}}\\\"\\n                       type=\\\"text\\\"\\n                       placeholder=\\\"Street address (second line)\\\"\\n                       formControlName=\\\"street2\\\">\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group row mb-2\\\">\\n              <label class=\\\"col-md-2 col-form-label\\\"\\n                     attr.for=\\\"{{'cityId' + i}}\\\">City, State, Zip Code</label>\\n              <div class=\\\"col-md-3\\\">\\n                <input class=\\\"form-control\\\"\\n                       id=\\\"{{'cityId' + i}}\\\"\\n                       type=\\\"text\\\"\\n                       placeholder=\\\"City\\\"\\n                       formControlName=\\\"city\\\">\\n              </div>\\n              <div class=\\\"col-md-3\\\">\\n                <select class=\\\"form-control\\\"\\n                        id=\\\"{{'stateId' + i}}\\\"\\n                        formControlName=\\\"state\\\">\\n                  <option value=\\\"\\\"\\n                          disabled\\n                          selected\\n                          hidden>Select a State...</option>\\n                  <option value=\\\"AL\\\">Alabama</option>\\n                  <option value=\\\"AK\\\">Alaska</option>\\n                  <option value=\\\"AZ\\\">Arizona</option>\\n                  <option value=\\\"AR\\\">Arkansas</option>\\n                  <option value=\\\"CA\\\">California</option>\\n                  <option value=\\\"CO\\\">Colorado</option>\\n                  <option value=\\\"WI\\\">Wisconsin</option>\\n                  <option value=\\\"WY\\\">Wyoming</option>\\n                </select>\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                <input class=\\\"form-control\\\"\\n                       id=\\\"{{'zipId' + i}}\\\"\\n                       type=\\\"number\\\"\\n                       placeholder=\\\"Zip Code\\\"\\n                       formControlName=\\\"zip\\\">\\n              </div>\\n            </div>\\n          </div>\\n\\n        </div>\\n\\n        <div class=\\\"form-group row mb-2\\\">\\n          <div class=\\\"col-md-4\\\">\\n            <button class=\\\"btn btn-outline-primary\\\"\\n                    type=\\\"button\\\"\\n                    [title]=\\\"addresses.valid ? 'Add another mailing address' : 'Disabled until the existing address data is valid'\\\"\\n                    [disabled]=\\\"!addresses.valid\\\"\\n                    (click)=\\\"addAddress()\\\">\\n              Add Another Address\\n            </button>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"form-group row mb-2\\\">\\n        <div class=\\\"offset-md-2 col-md-4\\\">\\n          <button class=\\\"btn btn-primary mr-3\\\"\\n                  type=\\\"submit\\\"\\n                  style=\\\"width:80px\\\"\\n                  [title]=\\\"customerForm.valid ? 'Save your entered data' : 'Disabled until the form data is valid'\\\"\\n                  [disabled]=\\\"!customerForm.valid\\\">\\n            Save\\n          </button>\\n          <button class=\\\"btn btn-outline-secondary\\\"\\n                  type=\\\"button\\\"\\n                  (click)=\\\"populateTestData()\\\">\\n            Test Data\\n          </button>\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n</div>\\n<br>Dirty: {{ customerForm.dirty }}\\n<br>Touched: {{ customerForm.touched }}\\n<br>Valid: {{ customerForm.valid }}\\n<br>Value: {{ customerForm.value | json }}\\n<br>Street: {{ addresses.get('0.street1')?.value }}\\n<br>&nbsp;\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Demo';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { CustomerComponent } from './customers/customer.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomerComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReactiveFormsModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1c3RvbWVycy9jdXN0b21lci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, AbstractControl, ValidatorFn, FormArray } from '@angular/forms';\n\nimport { debounceTime } from 'rxjs/operators';\n\nimport { Customer } from './customer';\n\nfunction emailMatcher(c: AbstractControl): { [key: string]: boolean } | null {\n  const emailControl = c.get('email');\n  const confirmControl = c.get('confirmEmail');\n\n  if (emailControl.pristine || confirmControl.pristine) {\n    return null;\n  }\n\n  if (emailControl.value === confirmControl.value) {\n    return null;\n  }\n  return { match: true };\n}\n\nfunction ratingRange(min: number, max: number): ValidatorFn {\n  return (c: AbstractControl): { [key: string]: boolean } | null => {\n    if (c.value !== null && (isNaN(c.value) || c.value < min || c.value > max)) {\n      return { range: true };\n    }\n    return null;\n  };\n}\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n  customerForm: FormGroup;\n  customer = new Customer();\n  emailMessage: string;\n\n  get addresses(): FormArray {\n    return this.customerForm.get('addresses') as FormArray;\n  }\n\n  private validationMessages = {\n    required: 'Please enter your email address.',\n    email: 'Please enter a valid email address.'\n  };\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.customerForm = this.fb.group({\n      firstName: ['', [Validators.required, Validators.minLength(3)]],\n      lastName: ['', [Validators.required, Validators.maxLength(50)]],\n      emailGroup: this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        confirmEmail: ['', Validators.required],\n      }, { validator: emailMatcher }),\n      phone: '',\n      notification: 'email',\n      rating: [null, ratingRange(1, 5)],\n      sendCatalog: true,\n      addresses: this.fb.array([this.buildAddress()])\n    });\n\n    this.customerForm.get('notification').valueChanges.subscribe(\n      value => this.setNotification(value)\n    );\n\n    const emailControl = this.customerForm.get('emailGroup.email');\n    emailControl.valueChanges.pipe(\n      debounceTime(1000)\n    ).subscribe(\n      value => this.setMessage(emailControl)\n    );\n  }\n\n  addAddress(): void {\n    this.addresses.push(this.buildAddress());\n  }\n\n  buildAddress(): FormGroup {\n    return this.fb.group({\n      addressType: 'home',\n      street1: ['', Validators.required],\n      street2: '',\n      city: '',\n      state: '',\n      zip: ''\n    });\n  }\n\n  populateTestData(): void {\n    this.customerForm.patchValue({\n      firstName: 'Jack',\n      lastName: 'Harkness',\n      emailGroup: { email: 'jack@torchwood.com', confirmEmail: 'jack@torchwood.com' }\n    });\n    const addressGroup = this.fb.group({\n      addressType: 'work',\n      street1: 'Mermaid Quay',\n      street2: '',\n      city: 'Cardiff Bay',\n      state: 'CA',\n      zip: ''\n    });\n    this.customerForm.setControl('addresses', this.fb.array([addressGroup]));\n  }\n\n  save() {\n    console.log(this.customerForm);\n    console.log('Saved: ' + JSON.stringify(this.customerForm.value));\n  }\n\n  setMessage(c: AbstractControl): void {\n    this.emailMessage = '';\n    if ((c.touched || c.dirty) && c.errors) {\n      this.emailMessage = Object.keys(c.errors).map(\n        key => this.validationMessages[key]).join(' ');\n    }\n  }\n\n  setNotification(notifyVia: string): void {\n    const phoneControl = this.customerForm.get('phone');\n    if (notifyVia === 'text') {\n      phoneControl.setValidators(Validators.required);\n    } else {\n      phoneControl.clearValidators();\n    }\n    phoneControl.updateValueAndValidity();\n  }\n\n}\n","export class Customer {\n\n  constructor(\n    public firstName = '',\n    public lastName = '',\n    public email = '',\n    public sendCatalog = false,\n    public addressType = 'home',\n    public street1?: string,\n    public street2?: string,\n    public city?: string,\n    public state = '',\n    public zip?: string) { }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}